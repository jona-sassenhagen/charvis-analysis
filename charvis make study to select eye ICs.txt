% "charvis"

% Script for building an eeglab study for Experiment charvis and identifying eye ICs
% This script collects individual, pre-processed subject data into an EEGLAB .study structure so you can automatically identify eye ICs using the EEGLAB plugin CORRMAP; it builds heavily on Viola's original CORRMAP scripts. CORRMAP identifies the best fit for a user-selected template across the whole study. Here, I feed CORRMAP an eye blink template and let it automatically select the blink ICs for all other subjects, so I can remove them later on.
% You will probably need to modify all file locations.

% Templates have to be selected manually and are hardcorded here!

eeglab;

% set path where to find preprocessed data
pathin = '~/Desktop/charvis/pre2/'
% set path where to save .study file
pathout = '~/Desktop/charvis/pre2/'
% .study file name
studyname = 'charvis'

% make list of all files in pathin
cd(pathin)
list=dir('*.set');
STUDY=[];ALLEEG=[];
n=length(list); %number of datasets that are going to be included in STUDY

% loop to build .study
for i= 1:length(list)
    %creating the study
    [STUDY ALLEEG]= std_editset(STUDY, ALLEEG,'name', studyname, 'commands', {...
        {'index', i,'load', [pathin,list(i).name],'subject',num2str(i)}
    });
end

%save .study
[STUDY ALLEEG]= std_editset(STUDY,ALLEEG,'filename',[pathout studyname '.study'], 'updatedat', 'off');

% make a .study design and compute measures necessary for CORRMAP and basic clustering
STUDY = std_makedesign(STUDY, ALLEEG,1,'name','probe','variable1','condition');
STUDY = std_selectdesign(STUDY, ALLEEG, 1);
[STUDY ALLEEG] = std_precomp(STUDY, ALLEEG, 'components','recompute','on','scalp','on','spec','on','specparams',{'specmode' 'fft' 'logtrials' 'off'});
% build standard clusters using basic measures (spectra at weight 1, scalp maps at weight 10 and dipoles at weight 1)
[STUDY ALLEEG] = std_preclust(STUDY, ALLEEG, 1,{'spec' 'npca' 10 'norm' 1 'weight' 1 'freqrange' [3 25] },{'scalpGrad' 'npca' 30 'norm' 1 'weight' 10 'abso' 0});

[STUDY ALLEEG] = pop_savestudy(STUDY,'filename', 'charvis.study', 'filepath',pathout);

pop_corrmap(STUDY,ALLEEG,3, 1,'chanlocs','','th','auto','ics',2,'title','blinks','clname','blinks','badcomps','no', 'resetclusters','off');


sets = STUDY.cluster(3).sets;
comps = STUDY.cluster(3).comps;

for I = 1:length(sets)
    Y = sets(I)
    comp = comps(I)
    fileloc = STUDY.datasetinfo(Y).filename
    EEG = pop_loadset('filename',fileloc,'filepath',STUDY.datasetinfo(Y).filepath);
    EEG.blinks = [];
    EEG.saccades = [];
    pop_saveset(EEG,'filename',fileloc,'filepath',STUDY.datasetinfo(Y).filepath);
end



for I = 1:length(sets)
    Y = sets(I)
    comp = comps(I)
    fileloc = STUDY.datasetinfo(Y).filename
    EEG = pop_loadset('filename',fileloc,'filepath',STUDY.datasetinfo(Y).filepath);
    EEG.blinks = [EEG.blinks, comp];
    pop_saveset(EEG,'filename',fileloc,'filepath',STUDY.datasetinfo(Y).filepath);
	EEG.blinks
end


pop_corrmap(STUDY,ALLEEG,3, 7,'chanlocs','','th','auto','ics',2,'title','saccades','clname','saccades','badcomps','no', 'resetclusters','off');


sets = STUDY.cluster(4).sets;
comps = STUDY.cluster(4).comps;


for I = 1:length(sets)
    Y = sets(I)
    comp = comps(I)
    fileloc = STUDY.datasetinfo(Y).filename
    EEG = pop_loadset('filename',fileloc,'filepath',STUDY.datasetinfo(Y).filepath);
    EEG.saccades = [EEG.saccades, comp];
    pop_saveset(EEG,'filename',fileloc,'filepath',STUDY.datasetinfo(Y).filepath);
	EEG.saccades
end
