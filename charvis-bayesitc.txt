ALLEEG=[];EEG=[];alldat=[];allrtvar=[];rts=[];dats=[];clear tics;clear itcs;clear out;clear out2;




% control words by position

control1={'S210' }
control2={ 'S220'}
control3={ 'S230'}



% change depending on conditions you want to analyse (syn, sem, all)

control={'S210' 'S220' 'S230'}
viol1 = {'S212'  'S214' }
viol2 = {'S222'  'S224' }
viol3 = { 'S232'  }


viol1 = {'S211'  'S213' }
viol2 = {'S221'  'S223' }
viol3 = { 'S231'  }

viol1 = {'S211'  'S212'  'S213' 'S214'}
viol2 = {'S221' 'S223' 'S222' 'S224' }
viol3 = { 'S231' 'S232' }


% set channel Pz

channel = 3


% loop through subjs

N = 3

for S = 1:N

if S == 2;
	channel = 3;
else
	channel = 3;
end;

% loads data per condition

%		filename = ['charvis',num2str((S),'%02i'),'.set'];
		filename = ['charvis',num2str(S),'.set'];
        filepath = '/home/jona/Desktop/jonafiles/'	
        

EEG = pop_loadset('filename',filename,'filepath',filepath);
EEG = pop_resample( EEG, 100);
EEG = pop_subcomp( EEG,1, 0);EEG.icasphere = []; EEG.icaweights = []; EEG.icawinv = [];
EEG = pop_reref( EEG, [16 17] );

EEG = pop_epoch( EEG, control1, [-4 5], 'epochinfo', 'yes');
dat = squeeze(eeg_getdatact(EEG,'channel',channel));
controlerp1=mean(dat,2);



EEG = pop_loadset('filename',filename,'filepath',filepath);
EEG = pop_resample( EEG, 100);
EEG = pop_subcomp( EEG,1, 0);EEG.icasphere = []; EEG.icaweights = []; EEG.icawinv = [];
EEG = pop_reref( EEG, [16 17] );

EEG = pop_epoch( EEG, control2, [-4 5], 'epochinfo', 'yes');
dat = squeeze(eeg_getdatact(EEG,'channel',channel));
controlerp2=mean(dat,2);



EEG = pop_loadset('filename',filename,'filepath',filepath);
EEG = pop_resample( EEG, 100);
EEG = pop_subcomp( EEG,1, 0);EEG.icasphere = []; EEG.icaweights = []; EEG.icawinv = [];
EEG = pop_reref( EEG, [16 17] );

EEG = pop_epoch( EEG, control3, [-4 5], 'epochinfo', 'yes');
dat = squeeze(eeg_getdatact(EEG,'channel',channel));
controlerp3=mean(dat,2);


EEG = pop_loadset('filename',filename,'filepath',filepath);
EEG = pop_resample( EEG, 100);
EEG = pop_subcomp( EEG,1, 0);EEG.icasphere = []; EEG.icaweights = []; EEG.icawinv = [];
EEG = pop_reref( EEG, [16 17] );

EEG = pop_epoch( EEG, viol1, [-4 5], 'epochinfo', 'yes');
dat = squeeze(eeg_getdatact(EEG,'channel',channel));
rtvar = eeg_getepochevent( EEG,{'S196'},[],'latency');


for ii=1:length(dat(1,:))
 dat(:,ii)=dat(:,ii)-controlerp1;
end

allrtvar = [rtvar,allrtvar];
alldat=[dat,alldat];

EEG = pop_loadset('filename',filename,'filepath',filepath);
EEG = pop_resample( EEG, 100);
EEG = pop_subcomp( EEG,1, 0);EEG.icasphere = []; EEG.icaweights = []; EEG.icawinv = [];
EEG = pop_reref( EEG, [16 17] );


EEG = pop_epoch( EEG, viol2, [-4 5], 'epochinfo', 'yes');
dat = squeeze(eeg_getdatact(EEG,'channel',channel));
rtvar = eeg_getepochevent( EEG,{'S196'},[],'latency');


for ii=1:length(dat(1,:))
 dat(:,ii)=dat(:,ii)-controlerp2;
end

allrtvar = [rtvar,allrtvar];
alldat=[dat,alldat];

EEG = pop_loadset('filename',filename,'filepath',filepath);
EEG = pop_resample( EEG, 100);
EEG = pop_subcomp( EEG,1, 0);EEG.icasphere = []; EEG.icaweights = []; EEG.icawinv = [];
EEG = pop_reref( EEG, [16 17] );

EEG = pop_epoch( EEG, viol3, [-4 5], 'epochinfo', 'yes');
dat = squeeze(eeg_getdatact(EEG,'channel',channel));
rtvar = eeg_getepochevent( EEG,{'S196'},[],'latency');


for ii=1:length(dat(1,:))
 dat(:,ii)=dat(:,ii)-controlerp3;
end

allrtvar = [rtvar,allrtvar];
alldat=[dat,alldat];

rts{S} = allrtvar;
datas{S} = alldat;
allrtvar=[];alldat=[];
end;

eegdata=[];rtdata=[];
for x = 1:3
eegdata=[eegdata,datas{x}];
rtdata=[rtdata,rts{x}];
end;

% simple ERPimage (only for basic validation)

figure;[outdata5,outrtvar5,outtrials5,limits,axhndls,erp,amps,cohers,cohsig,ampsig,outamps,phsangls,phsamp,sortidx,erpsig]  = erpimage(eegdata, rtdata, linspace(EEG.xmin*1000, EEG.xmax*1000, EEG.pnts), 'PZ ERP sorted by reaction time', 6, 1 ,'erp',1,'avg_type','Gaussian','cbar','on','cbar_title','\muV','vert',[700]);



% main TF script

for X = 1:N

[outdata5,outrtvar5,outtrials5,limits,axhndls,erp,amps,cohers,cohsig,ampsig,outamps,phsangls,phsamp,sortidx,erpsig] = erpimage(datas{X}, rts{X}, linspace(EEG.xmin*1000, EEG.xmax*1000, EEG.pnts), 'PZ ERP sorted by reaction time', 1, 1 ,'erp',1,'cbar','on','cbar_title','\muV','NoShow','on');

[outdata6,outrtvar6,outtrials6] = erpimage(datas{X}, rts{X}, linspace(EEG.xmin*1000, EEG.xmax*1000, EEG.pnts), 'PZ ERP sorted by reaction time', 1, 1 ,'erp',1,'cbar','on','cbar_title','\muV','NoShow','on','align',inf);

X
[ersp,itc,powbase,times,freqs,erspboot,itcboot,itcphase]  = newtimef( {outdata6 outdata5}  ,EEG.pnts,[EEG.xmin EEG.xmax]*1000,EEG.srate,[2 0.5], 'freqs', [0.5 8], 'plotphase', 'off', 'plotersp','off', 'plotitc','off','trialbase','full','timesout',1000,'nfreqs',30,'verbose','on','freqscale', 'linear','verbose','off','rmerp','off'); 
itcs1{X} = itc{1};
itcs2{X} = itc{2};
itcs{X} = itc{3};
ersps{X} = ersp{3};
tics(:,:,X) = itcs{X};
tics1(:,:,X) = itcs1{X};
tics2(:,:,X) = itcs2{X};
itcs3{X} = itc{3};
tics3(:,:,X) = itcs3{X};

X

end;


% find P6 peak in stim-locked data

[outdata,outrtvar,outtrials,limits,axhndls,erp,amps,cohers,cohsig,ampsig,outamps,phsangls,phsamp,sortidx,erpsig] = erpimage(eegdata,rtdata, linspace(EEG.xmin*1000, EEG.xmax*1000, EEG.pnts), 'PZ ERP sorted by reaction time', 1, 1 ,'erp',1,'cbar','on','cbar_title','\muV','NoShow','on');

[Ys,maxp6]=max(erp((times(1)-EEG.times(1))/10:525));
I = maxp6;
S = 3;

% also check RT for the heck of it, should be ~ I
for X = 1:N
rtallss(X) = nanmean(rts{X});
end;
mean(rtallss)
I


% calculate statistical significance of mean difference PLI

for X = 1:N
a(X) = mean(mean(tics3(:,I-S:I+S,X),1),2);
end;
a
stats = mes(a.',0,{'md','hedgesg'},'nBoot',10000)
[BF01, probH0] = bayesTtestOneSample(a)




for X = 1:N
x(X) = mean(mean(tics1(:,I-S:I+S,X),1),2);
y(X) = mean(mean(tics2(:,I-S:I+S,X),1),2);
end;
stats = mes(abs(x),abs(y),{'md','hedgesg'},'nBoot',10000)
[BF01, probH0] = bayesTtestTwoSample(abs(x),abs(y))


% plot ITCs both as 2d and 3d pics
% (adjust sbplot based on subject #)

figure; 
for X = 1:N
sbplot(1,3,X)
tftopo(itcs{X},times,freqs,'limits', [nan nan nan nan nan nan], 'smooth',2,'logfreq','off','vert',[ 0 maxp6],'title',num2str(X));
end;

figure; 
for X = 1:N
sbplot(1,3,X)
plotcurve(times,itcs{X}(:,:),'plotmean','on','vert',[maxp6-S maxp6+S]);
end;

